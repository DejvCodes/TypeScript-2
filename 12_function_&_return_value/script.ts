/*
Funkce - hlub≈°√≠ pohled na n√°vratovou hodnotu
‚Ä¢ ka≈æd√° funkce m≈Ø≈æe vracet nƒõjak√Ω v√Ωsledek pomoc√≠ return
‚Ä¢ v TypeScriptu m≈Ø≈æeme urƒçit, jak√©ho typu ten v√Ωsledek m√° b√Ωt
*/

// 1. Funkce s n√°vratov√Ωm typem "number"
const square = (num: number): number => {
    return num * num;
}
console.log(square(5)); // 25

// 2.Funkce s n√°vratov√Ωm typem "string"
const greet = (name: string): string => {
  return `Ahoj, ${name}!`;
}
console.log(greet('Dejv')); // Ahoj, Dejv!

// 3. Funkce bez n√°vratu (void)
const logMessage = (message: string): void => {
    console.log(message); // Zpr√°va
}
logMessage('Zpr√°va');

// 4. Funkce - Infinity -> n√°vratov√Ω typ "number"
const division = (num1: number, num2: number): number => {
    return num1 / num2;
}
console.log(division(10, 5)); // 2
// console.log(division(10, 0)); // Infinity 
// console.log(typeof(Infinity));  // number




console.log('----------------------')

// 4Ô∏è‚É£ Funkce, kter√° nikdy neskonƒç√≠ (never)
function throwError(msg: string): never {
  throw new Error(msg);
}
// throwError("Nƒõco se pokazilo!"); // üí• vyhod√≠ chybu


// 5Ô∏è‚É£ Automatick√© odvozen√≠ n√°vratov√©ho typu (type inference)
function multiply(a: number, b: number) {
  return a * b; // TS automaticky pozn√°, ≈æe vrac√≠ "number"
}
const result = multiply(4, 2); // ‚úÖ number


// 6Ô∏è‚É£ Funkce vracej√≠c√≠ v√≠ce mo≈ænost√≠ (union type)
function getStatus(success: boolean): string | number {
  return success ? "OK" : 500;
}
const status = getStatus(true); // ‚úÖ "OK" nebo 500


// 7Ô∏è‚É£ Funkce vracej√≠c√≠ objekt (ruƒçnƒõ typovan√Ω)
function createUser(name: string, age: number): { name: string; age: number } {
  return { name, age };
}
const user1 = createUser("David", 23);


// 8Ô∏è‚É£ Funkce vracej√≠c√≠ objekt pomoc√≠ vlastn√≠ho typu
type User = { name: string; age: number };

function makeUser(name: string, age: number): User {
  return { name, age };
}
const user2 = makeUser("Petr", 30);


// 9Ô∏è‚É£ Funkce s v√Ωchoz√≠ hodnotou parametru
function greetUser(name: string = "n√°v≈°tƒõvn√≠ku"): string {
  return `Ahoj, ${name}!`;
}
console.log(greetUser());      // "Ahoj, n√°v≈°tƒõvn√≠ku!"
console.log(greetUser("Dejv")); // "Ahoj, Dejv!"


// üîü Funkce s voliteln√Ωm parametrem (?)
function sayHello(name?: string): string {
  return name ? `Ahoj, ${name}!` : "Ahoj!";
}
console.log(sayHello());      // "Ahoj!"
console.log(sayHello("David")); // "Ahoj, David!"
